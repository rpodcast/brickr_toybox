% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collect_bricks.R
\name{image_to_bricks}
\alias{image_to_bricks}
\title{Convert image raster array to a LEGO-esque mosaic. Wrapper function.}
\usage{
image_to_bricks(img, img_size = 48, color_table = lego_colors,
  mosaic_type = "flat", brightness = 1, warhol = 1:3,
  brick_theme = "default", contrast = 1)
}
\arguments{
\item{img_size}{Size of output image in pixel, where one pixel = one 'brick'. Use a single value (e.g. \code{48}) for a square image with 48 pixels on each side.
Use an array of two values for a rectangular image \code{c(width, height)}.}

\item{color_table}{Defaults to \code{lego_colors}. Data frame of brick colors to map onto image. Must contain Name and R, G, B channels. See attached data  \code{lego_colors} as examples.}

\item{mosaic_type}{Default is 'flat' for a "studs-up" mosaic. Other option is 'stacked' for bricks placed on top of each other.}

\item{brightness}{A value >1 will increase the brightness of the image while a positive value <1 will decrease the brightness.}

\item{warhol}{Array of values \code{c(1, 2, 3)} associated with R, G, B color channels. Swap values in array to swap color channels for a fun visual effect.}

\item{brick_theme}{Theme of brick colors to use. Set to \code{"bw"} for grayscale mosaics.}

\item{contrast}{For \code{theme = "bw"}. A value >1 will increase the contrast of the image while a positive value <1 will decrease the contrast.}

\item{image_list}{List output from scale_image(). Contains an element  \code{Img_scaled}.}
}
\value{
A list with element \code{Img_lego} containing a data frame of the x- & y-coordinates, R, G, B channels, and mapped color of each brick (pixel).
}
\description{
Convert image raster array to a LEGO-esque mosaic. Wrapper function.
}
